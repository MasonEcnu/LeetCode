plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.2.71'
}

group 'com.mason'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

task commit2Git {
  doFirst {
    println "Please input commit message: "
    def scanner = new Scanner(System.in)
    def message = scanner.nextLine()
    'git add .'.execute()
    ('git commit --message ' + message).execute()
    'git push -u origin master'.execute()
  }
}

apply plugin: GitPlugin

// 定义一个实体bean对象
class GitPluginExtension {
  String firstOrder
  String secondOrder
  String thirdOrder
}

// 使用闭包方式设置值
gitExtension {
  firstOrder = 'git add .'
  secondOrder = 'git commit --message '
  thirdOrder = 'git push -u origin master'
}

class GitPlugin implements Plugin<Project> {
  // 此方法接受一个Project对象
  void apply(Project project) {
    // 向extension container保存gitExtension参数
    // 该greeting参数为GitPluginExtension的实体bean
    project.extensions.create("gitExtension", GitPluginExtension)
    // 向project对象添加Push2Git任务
    def git = project.gitExtension
    project.task('push2Git') {
      doLast {
        println "Please input commit message: "
        def scanner = new Scanner(System.in)
        def message = scanner.nextLine()
        git.firstOrder.execute()
        (git.secondOrder + "$message").execute()
        git.thirdOrder.execute()
      }
    }
  }
}
